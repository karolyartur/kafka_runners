# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html

stages:          # List of stages for jobs, and their order of execution
  - build
  - publish
  - init
  - deploy

#shell executor van beállítva!
build.job:
  stage: build
  only:
    - minio-trigger
  script:
    - docker build -t kafkarunners:${CI_COMMIT_BRANCH} .
publish-job:
  stage: publish
  only:
    - minio-trigger
  script:
    - docker login -p "${REGISTRY_PASSWORD}" -u runner1 https://registry.hpc.ekik.uni-obuda.hu:5000
    - echo "login to registry OK kafkarunners branch-> ${CI_COMMIT_BRANCH}"
    #nincs meglevo cntainer, csak ekkor kell ez, ha futik.
    #    - docker container commit $COMMIT_HASH kafkarunners:latest
    #    - echo "commit done"
    - docker image tag kafkarunners:${CI_COMMIT_BRANCH} registry.hpc.ekik.uni-obuda.hu:5000/kafkarunners:${CI_COMMIT_BRANCH}
    - echo "tagging OK"
    - docker image push registry.hpc.ekik.uni-obuda.hu:5000/kafkarunners:${CI_COMMIT_BRANCH}
    - echo "push was successfull"
#ez leskálázza szépen a service-t majd kinyiffantja, hogy ne akadjon össze semmi lehetőleg.
init-job:
  stage: init
  only:
    - minio-trigger
  script:
    - whoami
    - docker service update --force --update-parallelism 1 --update-delay 30s --replicas 0 ${CI_COMMIT_BRANCH}  || echo "there is no service like this"
    - docker service rm ${CI_COMMIT_BRANCH}  || echo "there is no service like this"
#telepítjük a szolgáltatást a megfelelő beállításokkal és indítjuk. A worktereknek hozzá kell tudniuk férni a registry-hez, ami be van állítva.
deploy-job:
  stage: deploy
  only:
    - minio-trigger
  script:
    - echo "-e IN_KAFKA_TOPIC=${MINIO_TRIGGER_IN} -e OUT_KAFKA_TOPIC=${INFERENCE_GPU_JOB} -e KAFKA_BROKERS=${KAFKA_BROKERS}"  
    - docker service create --with-registry-auth --replicas 1 --name ${CI_COMMIT_BRANCH} -e "IN_KAFKA_TOPIC=${MINIO_TRIGGER_IN}" --mount type=bind,source=/opt/fungi,destination=/app/credentials,readonly -e "OUT_KAFKA_TOPIC=${INFERENCE_GPU_JOB}" -e "KAFKA_BROKERS=${KAFKA_BROKERS}" -e "WEIGHTS_FILE=${WEIGHTS_FILE}" -e "MINIO_TRIGGER_GROUP_ID=${MINIO_TRIGGER_GROUP_ID}" registry.hpc.ekik.uni-obuda.hu:5000/kafkarunners:${CI_COMMIT_BRANCH}